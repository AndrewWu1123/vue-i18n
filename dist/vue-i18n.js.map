{"version":3,"sources":["webpack:///webpack/bootstrap 810f223c7a43da790463","webpack:///./src/vue-i18n.js"],"names":[],"mappings":";;;;;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"vue-i18n.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 810f223c7a43da790463\n **/","/**\n * The default options.\n *\n * @param baseUrl\n *    the base URL of the localization files, which could be either an absolute\n *    URL or a relative URL. The url should not ending with a slash. The default\n *    value is \"i18n\".\n * @param fallbackLanguage\n *    the code of the fallback language. If the localization file for a\n *    specified language is failed to load, the localization file for fallback\n *    language will be load.\n * @param timeout\n *    The timeout for the AJAX calls, in milliseconds. Default value is 500.\n * @param async\n *    Indicates whether to load the localization file asynchronously. Default\n *    value is false.\n */\nvar DEFAULT_OPTIONS = {\n  baseUrl: \"i18n\",\n  fallbackLanguage: \"en-US\",\n  timeout: 500,\n  async: false\n};\n\n/**\n * A plugin of Vue.js providing i18n functions.\n *\n * @param Vue\n *    the Vue class.\n * @param options\n *    the configuration options.\n * @author Haixing Hu\n */\nexports.install = function (Vue, options) {\n  var jquery = window.JQuery || window.$;\n  if (! jquery) {\n    throw new Error(\"JQuery is required.\");\n  }\n\n  // merge the default options\n  var opts = jquery.extend({}, DEFAULT_OPTIONS, options);\n  /**\n   * Sets the UI language.\n   *\n   * @param language\n   *    the code of the language to be set.\n   */\n  Vue.prototype.$setLanguage = function(language) {\n    // console.debug(\"Setting language: \" + language);\n    var url = opts.baseUrl + \"/\" + language + \".json\";\n    var fallbackUrl = opts.baseUrl + \"/\" + opts.fallbackLanguage + \".json\";\n    var vm = this;\n    Vue.prototype.$language = \"\";\n    Vue.prototype.$i18n = {};\n    jquery.ajax({\n      url: url,\n      dataType: \"json\",\n      type: \"GET\",\n      async: opts.async,\n      timeout: opts.timeout,\n      success: function(data) {\n        // console.debug(\"Sucessfully load: \" + url);\n        Vue.prototype.$language = language;\n        Vue.prototype.$i18n = data;\n        update(vm.$root);\n      },\n      error: function() {\n        // console.debug(\"Failed to load: \" + url);\n        // try to load localization file for the fallback language\n        jquery.ajax({\n          url: fallbackUrl,\n          dataType: \"json\",\n          type: \"GET\",\n          async: opts.async,\n          timeout: opts.timeout,\n          success: function(data) {\n            // console.debug(\"Sucessfully load: \" + fallbackUrl);\n            Vue.prototype.$language = language;\n            Vue.prototype.$i18n = data;\n            update(vm.$root);\n          },\n          error: function() {\n            throw new Error(\"Cannot load localization file: \" + url);\n          }\n        });\n      }\n    });\n  };\n};\n\n/**\n * Updates all the watchers in the Vue instance of a component tree.\n *\n * This function is inspired by the \"_digest()\" function in the\n * \"src/instance/scope.js\" of the source of Vue.js, excepts that this function\n * updates the children components no matter whether it is inheritable.\n *\n * @param vm\n *    the root of the component tree.\n */\nfunction update(vm) {\n  var i = vm._watchers.length;\n  while (i--) {\n    vm._watchers[i].update(true); // shallow updates\n  }\n  var children = vm.$children;\n  i = children.length;\n  while (i--) {\n    var child = children[i];\n    update(child);\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/vue-i18n.js\n ** module id = 0\n ** module chunks = 0\n **/"],"sourceRoot":""}